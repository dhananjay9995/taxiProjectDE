version: 0.1.1
default:
  # Default profile created for data IO access.
  # Add your credentials for the source you use, and delete the rest.
  # AWS
  AWS_ACCESS_KEY_ID: "{{ env_var('AWS_ACCESS_KEY_ID') }}"
  AWS_SECRET_ACCESS_KEY: "{{ env_var('AWS_SECRET_ACCESS_KEY') }}"
  AWS_SESSION_TOKEN: session_token (Used to generate Redshift credentials)
  AWS_REGION: region
  # Algolia
  ALGOLIA_APP_ID: app_id
  ALGOLIA_API_KEY: api_key
  ALGOLIA_INDEX_NAME: index_name
  # Azure
  AZURE_CLIENT_ID: "{{ env_var('AZURE_CLIENT_ID') }}"
  AZURE_CLIENT_SECRET: "{{ env_var('AZURE_CLIENT_SECRET') }}"
  AZURE_STORAGE_ACCOUNT_NAME: "{{ env_var('AZURE_STORAGE_ACCOUNT_NAME') }}"
  AZURE_TENANT_ID: "{{ env_var('AZURE_TENANT_ID') }}"
  # Chroma
  CHROMA_COLLECTION: collection_name
  CHROMA_PATH: path
  # Clickhouse
  CLICKHOUSE_DATABASE: default
  CLICKHOUSE_HOST: host.docker.internal
  CLICKHOUSE_INTERFACE: http
  CLICKHOUSE_PASSWORD: null
  CLICKHOUSE_PORT: 8123
  CLICKHOUSE_USERNAME: null
  # Druid
  DRUID_HOST: hostname
  DRUID_PASSWORD: password
  DRUID_PATH: /druid/v2/sql/
  DRUID_PORT: 8082
  DRUID_SCHEME: http
  DRUID_USER: user
  # DuckDB
  DUCKDB_DATABASE: database
  DUCKDB_SCHEMA: main
  # Google
  GOOGLE_SERVICE_ACC_KEY:
    type: service_account
    project_id: "caramel-brook-436419-s4"
    private_key_id: "6457b1e75219957a5aa8f8305f58c83e2a06ed30"
    private_key: "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCjPP392z4TKJ6O\n6q+6u83zBvhxKdwvPuQec25dX89a0BZyA03L2bP9U1PGEn4Uzz4FmYRvfK9RRNNT\nsSVg5cUk3X9/IRc6dxcJh9EAiWYuqi9wwynrzn6LBKmHaHxPidFBXVRwo8xbJpzi\nPv6h3iBLw4um2bNru9alh1dXcBOKLYxy0QlDVx62drP5x/Bi3/DEZbiQ3y6rhPhP\nElvKbKCZFJ+YB6IFSCA3+7U+eAEvvDCWnQOsh0z7ESa1eIXuwb8mktgzu7BLgEZ9\nyRRAewk9V1D0TdQSA+VtD4JonPYGyv8bH4ZYVADHa2fEPMeFobxD0Gw0zT53HmPz\nK2AFf3T9AgMBAAECggEAEwHvSgfP7BeEPab/1wdhnVACo4auIAWQ4XzWbTf9Te6X\nVnz3qj92JmQgB/CE+YkCM1EOFentA30MpcelpGlM3JSQG9kEupGTFKXZxS1lQRTJ\nrmCDTp++UL4LvCaDUcL9+JWqAe2zcNUHr+Pe7tvjDdS+EQEeKR13tSbpGYIwPEa5\nYdT40TQN+hGpPwVEbOvpFCXOmM8893C8WQeeNVrYTSV/TXEMNNTIlOH0AxEpi11E\ndzBOI7xX26qSO1zKCWXfpC9UFa2qO6JL0i7Nr9menvsdfKMSdfJkHuXB/7nxikuI\nhTUFTCJrXrZvvJ811O36YbqzU+aZsw5afF/FMGxazwKBgQDehAqFav05qmTOM3KO\nPugJ/+deXGRaVoQ/+OVg/PMwS6m6YvUieBTXS+kiJAdV9mjkkjffzTFJl29zzWol\nos7GYe0y2DNEmO4WnB+z1R2c2JQelK1pZBo94yqQTJjA26J+glL3a7UuiurjvoEK\nCO4p+NU0WKz01L8uNkp6oLFnjwKBgQC7zWgzAMYIJ7gJs+NVCjAMHTvdq51zk9nr\nV0obYgc9nR1GlYYcnYshMRf2X2loaMiNwkVqllyHgbhBvTX27nxPdNAKMtI+OHuP\ns9xWnl4vTUK/bb9u0lxKz8gZXuefYtIgPL13vnP0PhuJU47InUPM5cNEHiX4beuD\nAT5Za2U0swKBgBOPZeFei04DZYMe0KYib4FZhnwsAQJT8qIw/fDtq28GZ7AjvMq/\n5Y0bdi3zHtX2qDfXhqPcxMVkU37Jgtg2HJkhyJkcmj0geGVyafMD++tqunKJvUiz\nbP8dtgMjSJZDeGBIkoR/aljiC03j1DIOoOj9n7hPRzzqarfkO93VvGKPAoGAD7QV\nSm5+IKBxmx4XnDzF1716DAcVm1x5lFwwLin8QQKqOAS4uhvSTmw0fL1tqvVYD8J2\n23rHMe1+4sBXitZWPq6d1rx5KArBCjsX6YZEieAD/M3IfBPK89Z7/OMaqxEwUNHD\nZgfe2kV3N/xsrAm6aZ+svD1pH2TRlJq+A+wfAlECgYABVS9NInmPVPb2yp7qenv/\nXjbJSh1ciZqCPnN5kX4ngq0g+m6TqTpK1M0JSBVZOrRMChtAwdxmxV82pZEmr4d8\nG2w20kA3nCZXnRS3KvZH2x5H9hjRP1tUFL5G0fOLq8g122VqhgvbDcfUOdU4HxWk\nj0ZpIIE/0dx4rQrqEn9A2g==\n-----END PRIVATE KEY-----\n"
    client_email: "taxi-project-credentials@caramel-brook-436419-s4.iam.gserviceaccount.com"
    auth_uri: "https://accounts.google.com/o/oauth2/auth"
    token_uri: "https://oauth2.googleapis.com/token"
    auth_provider_x509_cert_url: "https://www.googleapis.com/oauth2/v1/certs"
    client_x509_cert_url: "https://www.googleapis.com/robot/v1/metadata/x509/taxi-project-credentials%40caramel-brook-436419-s4.iam.gserviceaccount.com"
  GOOGLE_SERVICE_ACC_KEY_FILEPATH: "/project1/passkey.json"
  GOOGLE_LOCATION: US # Optional
  # MongoDB
  # Specify either the connection string or the (host, password, user, port) to connect to MongoDB.
  MONGODB_CONNECTION_STRING: "mongodb://{username}:{password}@{host}:{port}/"
  MONGODB_HOST: host
  MONGODB_PORT: 27017
  MONGODB_USER: user
  MONGODB_PASSWORD: password
  MONGODB_DATABASE: database
  MONGODB_COLLECTION: collection
  # MSSQL
  MSSQL_DATABASE: database
  MSSQL_SCHEMA: schema
  MSSQL_DRIVER: "ODBC Driver 18 for SQL Server"
  MSSQL_HOST: host
  MSSQL_PASSWORD: password
  MSSQL_PORT: 1433
  MSSQL_USER: SA
  # MySQL
  MYSQL_DATABASE: database
  MYSQL_HOST: host
  MYSQL_PASSWORD: password
  MYSQL_PORT: 3306
  MYSQL_USER: root
  # Pinot
  PINOT_HOST: hostname
  PINOT_PASSWORD: password
  PINOT_PATH: /query/sql
  PINOT_PORT: 8000
  PINOT_SCHEME: http
  PINOT_USER: user
  # PostgresSQL
  POSTGRES_CONNECT_TIMEOUT: 10
  POSTGRES_DBNAME: postgres
  POSTGRES_SCHEMA: public # Optional
  POSTGRES_USER: username
  POSTGRES_PASSWORD: password
  POSTGRES_HOST: hostname
  POSTGRES_PORT: 5432
  # Qdrant
  QDRANT_COLLECTION: collection
  QDRANT_PATH: path
  # Redshift
  REDSHIFT_SCHEMA: public # Optional
  REDSHIFT_DBNAME: redshift_db_name
  REDSHIFT_HOST: redshift_cluster_id.identifier.region.redshift.amazonaws.com
  REDSHIFT_PORT: 5439
  REDSHIFT_TEMP_CRED_USER: temp_username
  REDSHIFT_TEMP_CRED_PASSWORD: temp_password
  REDSHIFT_DBUSER: redshift_db_user
  REDSHIFT_CLUSTER_ID: redshift_cluster_id
  REDSHIFT_IAM_PROFILE: default
  # Snowflake
  SNOWFLAKE_USER: username
  SNOWFLAKE_PASSWORD: password
  SNOWFLAKE_ACCOUNT: account_id.region
  SNOWFLAKE_DEFAULT_WH: null                  # Optional default warehouse
  SNOWFLAKE_DEFAULT_DB: null                  # Optional default database
  SNOWFLAKE_DEFAULT_SCHEMA: null              # Optional default schema
  SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: null      # Optional private key passphrase
  SNOWFLAKE_PRIVATE_KEY_PATH: null            # Optional private key path
  SNOWFLAKE_ROLE: null                        # Optional role name
  SNOWFLAKE_TIMEOUT: null                     # Optional timeout in seconds
  # Trino
  trino:
    catalog: postgresql                       # Change this to the catalog of your choice
    host: 127.0.0.1
    http_headers:
      X-Something: 'mage=power'
    http_scheme: http
    password: mage1337                        # Optional
    port: 8080
    schema: core_data
    session_properties:                       # Optional
      acc01.optimize_locality_enabled: false
      optimize_hash_generation: true
    source: trino-cli                         # Optional
    user: admin
    verify: /path/to/your/ca.crt              # Optional
  # Weaviate
  WEAVIATE_ENDPOINT: https://some-endpoint.weaviate.network
  WEAVIATE_INSTANCE_API_KEY: YOUR-WEAVIATE-API-KEY
  WEAVIATE_INFERENCE_API_KEY: YOUR-OPENAI-API-KEY
  WEAVIATE_COLLECTION: collectionn_name















===============================


from mage_ai.settings.repo import get_repo_path
from mage_ai.io.bigquery import BigQuery
from mage_ai.io.config import ConfigFileLoader
from pandas import DataFrame
from os import path

if 'data_exporter' not in globals():
    from mage_ai.data_preparation.decorators import data_exporter


@data_exporter
def export_data_to_big_query(df: DataFrame, **kwargs) -> None:
    """
    Template for exporting data to a BigQuery warehouse.
    Specify your configuration settings in 'io_config.yaml'.

    Docs: https://docs.mage.ai/design/data-loading#bigquery
    """
    table_id = 'caramel-brook-436419-s4.taxi_data_id.fact_table'
    config_path = path.join(get_repo_path(), 'io_config.yaml')
    config_profile = 'default'

    BigQuery.with_config(ConfigFileLoader(config_path, config_profile)).export(
        df,
        table_id,
        if_exists='replace',  # Specify resolution policy if table name already exists
    )
